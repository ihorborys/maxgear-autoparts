{"version":3,"file":"index.js","sources":["../src/js/parse.js","../src/js/read.js","../src/js/window-onload.js","../src/js/modal-burger.js","../src/js/modal-search.js","../src/js/debounce.js","../src/js/format.js","../src/js/results.js","../src/js/search.js","../src/js/slider.js"],"sourcesContent":["// Парсинг файлу\nconst DELIMITER = ';';\nconst NEW_LINE = '\\r\\n';\nexport const items = [];\n\nexport const parseCSV = csvData => {\n  const rows = csvData.split(NEW_LINE);\n  rows.shift(); // Видалити перший рядок (заголовки)\n  rows.forEach(row => {\n    const splitRow = row.split(DELIMITER);\n    items.push({\n      code: splitRow[0],\n      unicode: splitRow[1],\n      brand: splitRow[2],\n      desc: splitRow[3],\n      qty: splitRow[4],\n      price: splitRow[5],\n      store: splitRow[6],\n    });\n  });\n  console.log('Дані завантажені:', items);\n};\n\n// import Papa from 'papaparse';\n//\n// export const items = []; // Масив для зберігання об'єктів\n//\n// export const parseCSV = csvData => {\n//   return new Promise((resolve, reject) => {\n//     Papa.parse(csvData, {\n//       delimiter: ';', // Вказуємо ваш делімітер (;)\n//       skipEmptyLines: true, // Пропускати порожні рядки\n//       header: true, // Визначати перший рядок як заголовки\n//       dynamicTyping: true, // Автоматично конвертувати числа\n//       complete: results => {\n//         // Дані оброблені\n//         results.data.forEach(row => {\n//           items.push({\n//             code: row.code,\n//             unicode: row.unicode,\n//             brand: row.brand,\n//             desc: row.desc,\n//             qty: row.qty,\n//             price: row.price,\n//             store: row.store,\n//           });\n//         });\n//         console.log('Дані завантажені:', items);\n//         resolve(items); // Повертаємо масив об'єктів\n//       },\n//       error: error => {\n//         console.error('Помилка при парсингу:', error);\n//         reject(error); // Обробка помилки\n//       },\n//     });\n//   });\n// };\n","import { parseCSV } from './parse.js';\n\n// const fileURLs = ['../public/AUTOPARTNER.csv', '../public/GDANSK.csv', '../public/MOTOROL.csv'];\n\n// Автоматично завантажуємо файл за URL\n// const fileURL =\n//   'https://ihorborys-aws-bucket.s3.eu-north-1.amazonaws.com/Prices/PRICE+AP_GDANSK_MOTOROL_+13.01.2024_R_utf_8.csv';\n\n// const fileURLs = ['../public/AUTOPARTNER.csv', '../public/GDANSK.csv', '../public/MOTOROL.csv'];\n// const fileURLs = [\n//   'https://ihorborys-aws-bucket.s3.eu-north-1.amazonaws.com/Prices/PRICE+AP_GDANSK_MOTOROL_+13.01.2024_R_utf_8.csv',\n// ];\n// console.time('Execution Time');\n\nexport const readPrices = fileURLs => {\n  if (!Array.isArray(fileURLs) || fileURLs.length === 0) {\n    throw new Error('fileURLs should be a non-empty array.');\n  }\n  // Створюємо масив промісів для завантаження кожного файлу\n  const fetchPromises = fileURLs.map(url =>\n    fetch(url).then(response => {\n      if (!response.ok) {\n        throw new Error(`Failed to fetch file from ${url}`);\n      }\n      return response.text();\n    })\n  );\n\n  // Виконуємо всі запити паралельно та об'єднуємо результати\n  return Promise.all(fetchPromises)\n    .then(filesData => {\n      // Масив даних з усіх файлів\n      filesData.map(data => parseCSV(data));\n\n      // // Об'єднуємо дані в один прайс (наприклад, злиття масивів)\n      // const unifiedData = combinedData.flat();\n      //\n      // // Подальша обробка або вивід даних\n      // console.log('Об’єднаний прайс:', unifiedData);\n      // // console.timeEnd('Execution Time'); // Початок вимірювання\n      //\n      // return unifiedData;\n    })\n    .catch(error => {\n      alert('Error loading files: ' + error);\n    });\n};\n\n// export const readPrice = () => {\n//   return fetch(fileURLs) // Повертаємо проміс\n//     .then(response => {\n//       if (!response.ok) {\n//         throw new Error(`HTTP помилка! Статус: ${response.status}`);\n//       }\n//       return response.text(); // Перетворюємо відповідь у текст\n//     })\n//     .then(data => {\n//       parseCSV(data); // Обробляємо дані\n//     })\n//     .catch(error => {\n//       alert('Error loading file: ' + error); // Виводимо помилку\n//       throw error; // Прокидаємо помилку для подальшої обробки\n//     });\n// };\n\n// // // Автоматично завантажуємо файл за URL\n// // const fileURL = '../public/PRICE AP_GDANSK_MOTOROL_ 13.01.2024_R_utf_8.csv'; // Замінити на шлях до файлу\n//\n// // const fileURL =\n// //   'https://raw.githubusercontent.com/ihorborys/vite-maxgear-autoparts/gh-pages/PRICE%20AP_GDANSK_MOTOROL_%2013.01.2024_R_utf_8.csv'; // Замінити на шлях до файлу\n//\n// const fileURL =\n//   'https://ihorborys-aws-bucket.s3.eu-north-1.amazonaws.com/Prices/PRICE+AP_GDANSK_MOTOROL_+13.01.2024_R_utf_8.csv';\n//\n// export const readPrice = () => {\n//   fetch(fileURL)\n//     .then(response => response.text())\n//     .then(data => parseCSV(data))\n//     .catch(error => alert('Error loading file: ' + error));\n// };\n\n// export const readPrice = () => {\n//   return fetch(fileURL)\n//     .then(response => response.text())\n//     .then(data => parseCSV(data))\n//     .catch(error => alert('Error loading file: ' + error));\n// };\n\n// const readPrices = fileURLs => {\n//   // Створюємо масив промісів для завантаження кожного файлу\n//   const fetchPromises = fileURLs.map(url =>\n//     fetch(url).then(response => {\n//       if (!response.ok) {\n//         throw new Error(`Failed to fetch file from ${url}`);\n//       }\n//       return response.text();\n//     })\n//   );\n//\n//   // Виконуємо всі запити паралельно та об'єднуємо результати\n//   Promise.all(fetchPromises)\n//     .then(filesData => {\n//       // Масив даних з усіх файлів\n//       const combinedData = filesData.map(data => parseCSV(data));\n//\n//       // Об'єднуємо дані в один прайс (наприклад, злиття масивів)\n//       const unifiedData = combinedData.flat();\n//\n//       // Подальша обробка або вивід даних\n//       console.log('Об’єднаний прайс:', unifiedData);\n//     })\n//     .catch(error => {\n//       alert('Error loading files: ' + error);\n//     });\n// };\n//\n// // Використання\n\n","import { readPrices } from './read.js';\n\nwindow.onload = function () {\n  const loader = document.getElementById('js-loader');\n  const fileURLs = [\n    'https://ihorborys-aws-bucket.s3.eu-north-1.amazonaws.com/Prices/AUTOPARTNER.csv',\n    'https://ihorborys-aws-bucket.s3.eu-north-1.amazonaws.com/Prices/AUTOPARTNER_2.csv',\n    'https://ihorborys-aws-bucket.s3.eu-north-1.amazonaws.com/Prices/GDANSK.csv',\n    'https://ihorborys-aws-bucket.s3.eu-north-1.amazonaws.com/Prices/GDANSK_2.csv',\n    'https://ihorborys-aws-bucket.s3.eu-north-1.amazonaws.com/Prices/MOTOROL.csv',\n    'https://ihorborys-aws-bucket.s3.eu-north-1.amazonaws.com/Prices/MOTOROL_2.csv',\n  ];\n  console.time('Execution time');\n  // Викликаємо функцію readPrice\n  readPrices(fileURLs)\n    .then(() => {\n      console.log('Файл успішно завантажений!');\n      console.timeEnd('Execution time');\n    })\n    .catch(error => {\n      console.error('Помилка при завантаженні файлу:', error);\n    })\n    .finally(() => {\n      // Ховаємо індикатор завантаження\n      loader.style.display = 'none';\n    });\n\n  if ((loader.style.display = 'none')) {\n    document.querySelector('.logo').style.animationDelay = '0.5s';\n    document.querySelector('.search.button').style.animationDelay = '1s';\n  }\n};\n","// // Open burger modal menu\n// const burgerButton = document.querySelector('.mobile-menu-btn');\n// const modalBurger = document.querySelector('.modal-overlay.burger');\n//\n// burgerButton.addEventListener('click', event => {\n//   modalBurger.classList.add('active');\n// });\n\n// // Close burger modal menu\n// const closeButton = document.querySelector('.modal-close-btn.burger');\n//\n// closeButton.addEventListener('click', event => {\n//   modalBurger.classList.remove('active');\n// });\n\n// Open-close burger modal menu 2\nconst burgerButton = document.querySelector('.mobile-menu-btn');\nconst modalBurger = document.querySelector('.burger-section');\n\nburgerButton.addEventListener('click', event => {\n  if (modalBurger.classList.contains('active')) modalBurger.classList.remove('active');\n  else modalBurger.classList.add('active');\n});\n\n// // Select item burger modal menu\n// const mobileItems = document.querySelectorAll('.mobile-menu-list-item');\n// mobileItems.forEach(item => {\n//   item.addEventListener('click', () => {\n//     mobileItems.forEach(item => {\n//       item.classList.remove('active');\n//     });\n//     item.classList.add('active');\n//   });\n// });\n","// Open search modal menu\nconst catalogButton = document.querySelector('.search.button');\nconst modalSearch = document.querySelector('.modal-overlay.search');\n\ncatalogButton.addEventListener('click', event => {\n  modalSearch.classList.add('active');\n});\n\n// Close search modal menu\nconst closeButton = document.querySelector('.modal-close-btn.search');\n\ncloseButton.addEventListener('click', event => {\n  modalSearch.classList.remove('active');\n});\n","// Функція для затримки (debounce)\nexport const debounce = (func, delay) => {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => func(...args), delay);\n  };\n};\n","// Форматування коду введення\nexport function formatCode(rawCode) {\n  return rawCode.toLowerCase().replace(/[^a-zA-Z0-9]/g, '');\n}\n","// Відображення результатів\nconst keyMapping = {\n  code: 'Код',\n  unicode: 'Юнікод',\n  brand: 'Бренд',\n  desc: 'Опис',\n  price: 'Ціна, Є',\n  qty: 'Кількість',\n  store: 'Склад',\n};\n\nexport function displayResults(result) {\n  console.log(typeof result);\n  const resultsDiv = document.getElementById('results');\n\n  if (!resultsDiv) {\n    console.error('Елемент #results не знайдено.');\n    return;\n  }\n\n  if (!Array.isArray(result)) {\n    alert('Введіть дані для пошуку');\n    return;\n  }\n\n  const maxItems = 10; // Максимальна кількість позицій\n  resultsDiv.innerHTML = result\n    .slice(0, maxItems) // Беремо лише перші maxItems елементів\n    .map(\n      row => `\n      <div class=\"searched-item\"\">\n        ${\n          typeof row === 'object' && row !== null\n            ? Object.entries(row)\n                .map(([key, value]) => {\n                  const displayKey = keyMapping[key] || key; // Замінюємо ключ або залишаємо як є\n                  return `<p><strong>${displayKey}:</strong> &nbsp ${value}</p>`;\n                })\n                .join('')\n            : `<p>${row}</p>`\n        }\n      </div>\n    `\n    )\n    .join('');\n}\n","import { debounce } from './debounce.js';\nimport { formatCode } from './format.js';\nimport { items } from './parse.js';\nimport { displayResults } from './results.js';\n\n// Пошук\nconst searchInput = document.querySelector('#search');\n\nconst handleSearch = event => {\n  if (event.target.value) {\n    const searchCode = formatCode(event.target.value);\n    console.log(searchCode);\n\n    const result = items.filter(\n      item =>\n        (item.code && formatCode(item.code) === searchCode) ||\n        (item.unicode && formatCode(item.unicode) === searchCode) ||\n        (item.brand && formatCode(item.brand) === searchCode)\n    );\n    console.log(result);\n    displayResults(result);\n  }\n};\n\n// Додаємо затримку при введенні даних для пошуку\nconst debouncedSearch = debounce(handleSearch, 900); // 900 мс затримка\nsearchInput.addEventListener('input', debouncedSearch);\n","// import Swiper bundle with all modules installed\nimport Swiper from 'swiper/bundle';\n\n// import styles bundle\nimport 'swiper/css/bundle';\n\nconst swiper = new Swiper('.swiper', {\n  direction: 'horizontal',\n  loop: true,\n  mousewheel: true,\n  slidesPerView: 1,\n  spaceBetween: 20,\n\n  breakpoints: {\n    480: {\n      slidesPerView: 2, // Від 1280px і більше буде 2 слайди\n    },\n\n    1024: {\n      slidesPerView: 3, // Від 1280px і більше буде 3 слайди\n    },\n  },\n\n  autoplay: {\n    delay: 4000, // Затримка між слайдами (в мілісекундах, 3000 = 3 секунди)\n    disableOnInteraction: false, // Продовжувати автопрокрутку після взаємодії користувача\n  },\n\n  pagination: {\n    el: '.swiper-pagination',\n    clickable: true,\n    dynamicBullets: true,\n  },\n});\n"],"names":["DELIMITER","NEW_LINE","items","parseCSV","csvData","rows","row","splitRow","readPrices","fileURLs","fetchPromises","url","response","filesData","data","error","loader","burgerButton","modalBurger","event","catalogButton","modalSearch","closeButton","debounce","func","delay","timer","args","formatCode","rawCode","keyMapping","displayResults","result","resultsDiv","maxItems","key","value","searchInput","handleSearch","searchCode","item","debouncedSearch","Swiper"],"mappings":"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"}